#!/bin/bash
# Nek5000 build config file

## LOCAL ------------------
# source path
SOURCE_ROOT="../../DEC_Nek5000" 
# Fortran compiler
F77="mpif77"
# C compiler
CC="mpicc"
## ------------------------


## ABISKO/KEBNEKAISE ------
# source path
# SOURCE_ROOT="/pfs/nobackup/home/a/atzori/DEC_Nek5000"
# Fortran compiler
# F77="mpiifort"
# C compiler
#CC="mpiicc"
## ------------------------

## BESKOW
## switch to intel: module swap PrgEnv-cray PrgEnv-intel

# source path
#SOURCE_ROOT="/cfs/klemming/nobackup/a/atzori/DEC_Nek5000"
# Fortran compiler
#F77="ftn"
# C compiler
#CC="cc"
#CC="cc -D_Float128=__float128"


SOURCE_ROOT_CORE="$SOURCE_ROOT/core"
SOURCE_ROOT_JL="$SOURCE_ROOT/jl"
SOURCE_ROOT_CMT="$SOURCE_ROOT/core/cmt"


# OPTIONAL SETTINGS
# -----------------

# generic compiler flags
#G="-g"
G="-I./inc_src -mcmodel=large -std=legacy"

# pre-processor symbol list 
# (set PPLIST=? to get a list of available symbols)
PPLIST="MPIIO" 

# linking flags
#USR_LFLAGS="-L/usr/lib -lfoo"

# enable MPI (default true)
#IFMPI="false"

# disable/enable profiling (default true`)
IFPROFILING="true"

# enable AMG coarse grid solver (default XXT)
#IFAMG="true"
#IFAMG_DUMP="true"

# optimization flags
#OPT_FLAGS_STD=""
#OPT_FLAGS_MAG=""

# enable CMT (default false)
#IFCMT="true"

# auxilliary files to compile
# NOTE: source files have to located in the same directory as makenek
#       a makefile_usr.inc has to be provided containing the build rules 
#USR="foo.o"
USR="IO_tools.o chkpoint.o uparam.o statistics_2D.o statistics_2DIO.o statistics_2D_usr.o statistics_2D_debug.o time_series.o time_seriesIO.o pts_redistribute.o err_est.o rt_filter.o tripf.o misc.o"


# MOAB/iMESH path
#MOAB_DIR="$HOME/moab"

# For linking to MOAB, the following might be needed:
# NOTE: compiler specific, use the appropriate one depending on your compiler
# GNU:
# USR_LFLAGS="-lmpi_cxx -lstdc++"
# Intel:
# USR_LFLAGS="-cxxlib"
# PGI:
# USR_LFLAGS="-pgcpplibs"
# USR_LFLAGS=" -lmpi_cxx -lstdc++"

# enable VisIt in situ
#  Note: you can override the lib and include paths. VISIT_LIB and VISIT_INC
#  If VISIT_STOP is set the simulation will stop after first step and wait
#  for VisIt to connect.
#IFVISIT=true
#VISIT_INSTALL="/path/to/visit/current/linux-x86_64/"
#VISIT_STOP=true

###############################################################################
# DONT'T TOUCH WHAT FOLLOWS !!!
###############################################################################
# assign version tag
mver=1
# overwrite source path with optional 2nd argument
if [ -d $2 ] && [ $# -eq 2 ]; then
  SOURCE_ROOT="$2"
  echo "change source code directory to: ", $SOURCE_ROOT
  SOURCE_ROOT_CORE="$SOURCE_ROOT/core"
  SOURCE_ROOT_JL="$SOURCE_ROOT/jl"
  SOURCE_ROOT_CMT="$SOURCE_ROOT/core/cmt"
fi
# do some checks and create makefile
source $SOURCE_ROOT_CORE/makenek.inc
# compile
make -j4 -f makefile 2>&1 | tee compiler.out
exit 0
